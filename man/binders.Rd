% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/peptide-mhc.R
\name{binders}
\alias{binders}
\title{Find MHC Binders in Protein Sequence}
\usage{
binders(x, mhc = "HLA-A-02:01", l = 9, ic50.threshold = 500,
  quantile.threshold = NULL, include.peptide = TRUE, method = "smm")
}
\arguments{
\item{x}{string, a protein sequence given in single-letter coding. Only the 20 common
amino acids are supported.}

\item{mhc}{string identifying the MHC molecule.}

\item{l}{the peptide length.}

\item{ic50.threshold}{peptides with a predicted IC50 value lower than this will be
considered binders. A threshold of 500 nM is common. Use \code{Inf} to show predictions
for all peptides of length \code{l}.}

\item{quantile.threshold}{a number between 0 and 1. If this is not \code{NULL}, then
the parameter \code{ic50.threshold} is ignored and the peptides for which the predicted
IC50 falls within the given quantile will be returned. For instance, a value of .02
return the peptides whose binding strength is in the top 2\% for the given protein.}

\item{include.peptide}{logical, whether to include the actual peptide in the output
data frame. This may not be desired in some circumstances, e.g. for very long
proteins or for converting the result to a matrix.}

\item{method}{string defining which prediction method to use. Currently the only
implemented method is the stabilized matrix method (SMM), such that this setting is
ignored. But further methods may be implemented in the future.}
}
\value{
a data frame containing the peptide (if \code{include.peptide=TRUE}),
start position, end position, and predicted IC50 for
every peptide below the threshold.
}
\description{
Performs binding predictions for all l-mers in the given protein sequence, extracts
the peptide whose IC50 values are below the given thresholds, and returns the results
as a data frame.
}
\examples{
## This is the CORE protein from the Hepatitis C virus reference sequence available
## at https://hcv.lanl.gov/content/sequence/LOCATE/locate.html
hcv.core <- paste("MSTNPKPQRKTKRNTNRRPQDVKFPGGGQIVGGVYLLPRRGPRLGVRATRKTSERSQPRGRR",
"QPIPKARRPEGRTWAQPGYPWPLYGNEGCGWAGWLLSPRGSRPSWGPTDPRRRSRNLGKVIDTLTCGFADLMGYIPLVGA",
 "PLGGAARALAHGVRVLEDGVNYATGNLPGCSFSIFLLALLSCLTVPASA",sep="")
binders( hcv.core )
}

